# 本模板主要用于 构建并推送Java应用镜像至镜像仓库， 一共分为两个Stages： build、 image
#  build 阶段： 编译打包，并上传制品库。  （此步骤并发核心步骤，部分项目可以参考优化，也可以省掉此阶段直接构建镜像）
#  image 阶段： 构建镜像，并推送至镜像仓库
#  流水线运行条件： 代码打标签 或者 手动运行流水线 设置：APP_TAG


workflow:
  rules:
    - if: $CI_COMMIT_TAG #代码打标签
    - if: $APP_TAG #手动运行流水线 设置：APP_TAG


variables:
  # 镜像全路径
  HARBOR_IMG: "$HARBOR_HOST/$CI_PROJECT_PATH"
  
stages:
  - build
  - image

jar-build:
  image: harbor.digitalchina.com/public/maven:3-openjdk-8
  stage: build
  script:
    - mvn clean package -Dmaven.test.skip=true
  artifacts:
    when: on_success
    paths: # Pass Dockerfile to avoid clone codes in the next jobs
      - Dockerfile
      - xxl-job-admin/target/*.jar
      #- manifests/*

image-build:
  image: docker:20.10.16
  stage: image
  before_script:
    - docker login -u "$HARBOR_USERNAME" -p "$HARBOR_PASSWORD" $HARBOR_HOST
  script:
    - |
      if [ -n "$APP_TAG" ]; then
        TAG="$APP_TAG"
      else
        TAG="$CI_COMMIT_TAG"
      fi
    - echo "Set TAG=$TAG"
    - docker build -t ${HARBOR_IMG}:${TAG} .
    - docker push ${HARBOR_IMG}:${TAG}


